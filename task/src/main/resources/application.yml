server:
  port: 8082
spring:
  application:
    name: task
  profiles:
    active: secret
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI}
            user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: ${keycloak.client-id}
            client-secret: ${keycloak.client-secret}
            scope:
              - openid
              - microprofile-jwt
              - task_em_scope
            authorization-grant-type: authorization_code
            provider: keycloak
#            redirect-uri: ${REDIRECT_URI}
          task-em:
            client-id: ${keycloak.client-id}
            client-secret: ${keycloak.client-secret}
            scope:
              - openid
              - microprofile-jwt
              - task_em_scope
            authorization-grant-type: client_credentials
            provider: keycloak
#            redirect-uri: ${REDIRECT_URI}
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI}
  datasource:
    url: jdbc:postgresql://postgres_task:5432/postgres_task_em
    driverClassName: org.postgresql.Driver
    username: ${postgres.USERNAME}
    password: ${postgres.PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

eureka:
  client:
    service-url:
      defaultZone: http://eureka:8761/eureka


#  instance:
##    hostname: localhost
##    non-secure-port: 8082
#    prefer-ip-address: true
##    ip-address: 127.0.0.1
##    instance-id: ${spring.application.name}:${server.port}
