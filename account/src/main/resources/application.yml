server:
  port: 8081
spring:
  application:
    name: account
  profiles:
    active: secret
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI}
            user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: ${keycloak.client-id}
            client-secret: ${keycloak.client-secret}
            scope:
              - openid
              - microprofile-jwt
              - account_em_scope
            authorization-grant-type: authorization_code
            provider: keycloak
          task-em:
            client-id: ${keycloak.client-id}
            client-secret: ${keycloak.client-secret}
            scope:
              - openid
              - microprofile-jwt
              - account_em_scope
            authorization-grant-type: client_credentials
            provider: keycloak
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI}
  datasource:
    url: jdbc:postgresql://postgres_user:5433/postgres_user_em
    driverClassName: org.postgresql.Driver
    username: ${postgres.USERNAME}
    password: ${postgres.PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect


eureka:
  client:
    service-url:
      defaultZone: http://eureka:8761/eureka



